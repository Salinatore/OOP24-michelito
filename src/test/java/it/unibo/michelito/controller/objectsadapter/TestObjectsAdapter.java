package it.unibo.michelito.controller.objectsadapter;

import it.unibo.michelito.controller.levelgenerator.LevelGenerator;
import it.unibo.michelito.controller.objectsadapter.api.ObjectsAdapter;
import it.unibo.michelito.controller.objectsadapter.impl.ObjectsAdapterFactory;
import it.unibo.michelito.controller.objectsadapter.impl.ObjectsAdapterImpl;
import it.unibo.michelito.controller.objectsadapter.impl.ObjectsAdapterWithCache;
import it.unibo.michelito.util.GameObject;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.Set;
import java.util.function.Function;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * Test for the {@link ObjectsAdapterImpl} and {@link ObjectsAdapterWithCache} class.
 */
final class TestObjectsAdapter {
    /**
     * Test if the {@link ObjectsAdapterImpl} returns a set of the same size
     * of the one generated by {@link LevelGenerator}.
     */
    @Test
    void testObjectsAdapterImpl() {
//        final ObjectsAdapter objectsAdapter = new ObjectsAdapterImpl(new LevelGenerator(e -> { }));
//        final var levelGeneratorSet = LevelGenerator.apply(LevelGenerator.testLevel());
//        final var objectsAdapterSet = objectsAdapter.requestMazeObjects(LevelGenerator.testLevel());
//        assertEquals(levelGeneratorSet.size(), objectsAdapterSet.size());
    }

    /**
     * Test if the {@link ObjectsAdapterWithCache} returns a set of the same size
     * of the one generated by {@link ObjectsAdapterImpl}.
     */
    @Test
    void testObjectsAdapterWithCache() {
//        final ObjectsAdapter objectsAdapterWithCache = new ObjectsAdapterWithCache();
//        final ObjectsAdapter objectsAdapterImpl = new ObjectsAdapterImpl();
//        final var objectsAdapterWithCacheSet = objectsAdapterWithCache.requestMazeObjects(LevelGenerator.testLevel());
//        final var objectsAdapterImplSet = objectsAdapterImpl.requestMazeObjects(LevelGenerator.testLevel());
//        assertEquals(objectsAdapterImplSet.size(), objectsAdapterWithCacheSet.size());
    }
}
